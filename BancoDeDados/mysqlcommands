CREATE TABLE Users
(
	UserID int PRIMARY KEY AUTO_INCREMENT,
    Nome varchar(100) NOT NULL,
    Email varchar(100) UNIQUE NOT NULL,
    Pass varchar(25) NOT NULL,
    City varchar(25),
    ImagePath varchar(1024),
    Visibility int DEFAULT 0,
    RegisterDate datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
    LastLogin datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
    LastModification datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
    INDEX(Email, Pass)         
);

 CREATE TABLE Relacionamento(
	UserID1 int NOT NULL,
	UserID2 int NOT NULL,
	FOREIGN KEY (UserID1) REFERENCES Users(UserID),
	FOREIGN KEY (UserID2) REFERENCES Users(UserID),
	Status int NOT NULL,
	INDEX(UserID1)
);

CREATE TABLE Grupo(
	GrupoID int PRIMARY KEY AUTO_INCREMENT,
	Nome varchar(50) NOT NULL,
	Visibilidade int DEFAULT 0,
	Descrição varchar(1000),
	Foto varchar(1024)
);

CREATE TABLE RelationGU(
	GrupoID int NOT NULL,
	UserID int NOT NULL,
	Staff BOOLEAN DEFAULT 0,
	PRIMARY KEY (GrupoID, UserID),
	FOREIGN KEY (GrupoID) REFERENCES Grupo(GrupoID),
	FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

CREATE TABLE Publicacao(
	PublicacaoID int PRIMARY KEY AUTO_INCREMENT,
	UserID int NOT NULL,
	Imagem varchar(1024),
	Texto varchar(500),
	FOREIGN KEY (UserID) REFERENCES Users(UserID)	
);

CREATE TABLE Comentario(
	ComentarioID int PRIMARY KEY AUTO_INCREMENT,
	UserID int NOT NULL,
	PublicacaoID int NOT NULL,
	Texto varchar(500) NOT NULL,	
	FOREIGN KEY (PublicacaoID) REFERENCES Publicacao(PublicacaoID),
	FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

CREATE TABLE Respostas
(
	RespostaID int PRIMARY KEY AUTO_INCREMENT,
	UserID int NOT NULL,
	ComentarioID int NOT NULL,
	Texto varchar(500) NOT NULL,
	FOREIGN KEY (UserID) REFERENCES Users(UserID),
	FOREIGN KEY (ComentarioID) REFERENCES Comentario(ComentarioID)
	
);

CREATE TABLE MuralGrupo
(
	GrupoID int NOT NULL,
	PublicacaoID int NOT NULL,
	FOREIGN KEY (GrupoID) REFERENCES Grupo(GrupoID),
	FOREIGN KEY (PublicacaoID) REFERENCES Publicacao(PublicacaoID),
);

CREATE TABLE MuralUsers
(
	UserID int NOT NULL,
	PublicacaoID int NOT NULL,
	FOREIGN KEY (PublicacaoID) REFERENCES Publicacao(PublicacaoID),
	FOREIGN KEY (UserID) REFERENCES Users(UserID),
	
);
